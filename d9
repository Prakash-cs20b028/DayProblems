void Initialize(string str, vector<int>& temp) 
    {
        int n = str.length();
        int j = 0;
        int i = 1;
        temp[0] = 0;
        while(i<n)
        {
            if(str[j] == str[i])
            {
                j++;
                temp[i] = j;
                i++;
            }
            else
            {
                if(j!=0)
                {
                    j = temp[j-1];
                }
                else
                {
                    i++;
                }
            }
        }
    }

    void fun(string txt, string pat, vector<int>& ans) 
    {
        int m = txt.length();
        int n = pat.length();
        vector<int> temp(n, 0);
    
        Initialize(pat, temp);  // Used to initialize the temp array variable.
        
        int i=0,j=0;
        while(i<m)
        {
            //calculation1
            if(pat[j] == txt[i])
            {
                j++;i++;
            }
            if(j==n)  //ans
            {
                ans.push_back(i-j+1);
                j = temp[j-1];
            }
            else if(pat[j] != txt[i])
            {
                //calculation2 and sliding window concept
                if(j!=0)
                {
                    j = temp[j-1];
                }
                else
                {
                    i++;
                }
            }
        }
    }
    vector <int> search(string pat, string txt)
    {
        vector<int> ans;
        
        fun(txt,pat,ans);
        return ans;
    } 
